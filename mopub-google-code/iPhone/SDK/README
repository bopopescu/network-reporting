Drag the SDK Files into your library (or svn external as necessary)

I) Installing a Banner Ad 

Assuming you have created a 320x50 view somehow either with a XIB or programmatically, you simply ad the


SIMPLE:

AdController *adController = [[AdController alloc] initWithFormat:AdControllerFormat320x50 adUnitId:PUB_ID_320x50 parentViewController:self];
adController.keywords = @"coffee";
adController.delegate = self;
[self.adView addSubview:adController.view];

SLIGHTLY ADVANCED:

AdController *adController = [[AdController alloc] initWithFormat:AdControllerFormat320x50 adUnitId:PUB_ID_320x50 parentViewController:self];
adController.keywords = @"coffee";
adController.delegate = self;
[adController loadAd]; // loads ad in the background

We then must respond to the ad did start loading method, so we know when to show the ad:

- (void)adControllerDidLoadAd:(AdController *)_adController{
// we place the ad on screen 
_adController.view.alpha = 0.0;
[self.adView addSubview:_adController.view];

// then We SLOWLY animate the view onto the screen
[UIView beginAnimations:@"fadeIn" context:nil];
[UIView setAnimationDuration:2.0f];
[UIView setAnimationBeginsFromCurrentState:YES];
[UIView setAnimationCurve:UIViewAnimationCurveLinear];

self.mrectController.view.alpha = 1.0;

[UIView commitAnimations];
}



II) Installing the Interstitial

App Open Placement:

AppDelegate.m
-------------

#import "InterstitialAdController.h"

- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {    
...

InterstitialAdController *interstitialAdController = [InterstitialAdController sharedInterstitialAdControllerForAdUnitId:PUB_ID_INTERSTITIAL];	
interstitialAdController.delegate =  self; // the View Controller Object that will first appear on screen
[interstitialAdController loadAd];
[interstitialAdController release];

...
}

#pragma mark -
#pragma mark Interstitial handling

// Show the ad as soon as its ready
- (void)adControllerDidLoadAd:(AdController *)_adController{
	
	// if its an interstitial we show it right away
	if ([_adController isKindOfClass:[InterstitialAdController class]])
		[self.tabBarController.selectedViewController presentModalViewController:_adController animated:YES];
}

- (void)adControllerFailedLoadAd:(AdController *)adController {
	NSLog(@"Failed to load interstitial...");
}

// hide the ad when its to be closed
- (void)interstitialDidClose:(InterstitialAdController *)_interstitialAdController{
	[_interstitialAdController dismissModalViewControllerAnimated:YES];
}

// Sent with the interstitial is about to appear, it is a good place to save state in case
// the user leaves the application from the interstitial
- (void)interstitialWillAppear:(InterstitialAdController *)interstitialAdController {
}

// Sent when the interstitial is on screen
- (void)interstitialDidAppear:(InterstitialAdController *)interstitialAdController {
}


Downstream Placement:

Request the ad as soon as possible preferably in the application delegate's didFinishLaunchingWithOptions method

AppDelegate.m
-------------

#import "InterstitialAdController.h"

- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {    
...

// we load the ad in the background

self.interstitialAdController = [InterstitialAdController sharedInterstitialAdControllerForAdUnitId:PUB_ID_INTERSTITIAL];	
//no one has signed up yet for receiving responses that means anyone who wants to show it must make sure its ready
self.interstitialAdController.delegate = nil; 
[self.interstitialAdController loadAd];

...
}


The in the UIViewController from which you'd actually like to display the ad you verify that its ready, then show it

MyUIViewController.m
--------------------

#import AdController.h

// Show the ad as soon as its ready
- (void)showInterstitial{
	InterstitialAdController *interstitialAdController = [InterstitialAdController sharedInterstitialAdControllerForAdUnitId:PUB_ID_INTERSTITIAL];
	if (interstitialAdController.loaded){
		interstitialAdController.delegate = self; // sign up as the delegate so that we can tear it down appropriately
		[self presentModalViewController:interstitialAdController animated:YES];
		[interstitialAdController release];
	}
	else{
	 	// continue on as usual
	}
}

// hide the ad when its to be closed
- (void)interstitialDidClose:(InterstitialAdController *)_interstitialAdController{
	[_interstitialAdController dismissModalViewControllerAnimated:YES];
}

// Sent with the interstitial is about to appear, it is a good place to save state in case
// the user leaves the application from the interstitial
- (void)interstitialWillAppear:(InterstitialAdController *)interstitialAdController {
}

// Sent when the interstitial is on screen
- (void)interstitialDidAppear:(InterstitialAdController *)interstitialAdController {
}

